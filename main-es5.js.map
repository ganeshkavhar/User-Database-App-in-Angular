{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","userService","newUser","editedUser","users","getUsers","getUsersFromData","user","userForm","editUserForm","length","isNewUser","addUser","updateUser","deleteUser","showAddUserForm","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","UserService","upersons","firstName","lastName","push","index","findIndex","u","splice","indexOf","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { User } from './models/user';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean;\n  editedUser: any = {};\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.users = this.getUsers();\n  }\n\n  getUsers(): User[] {\n    return this.userService.getUsersFromData();\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      // add a new user\n      this.userService.addUser(user);\n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.editedUser);\n    this.editUserForm = false;\n    this.editedUser = {};\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 mt-4\">\n      <h1 class=\"text-center\"> User Database App üë®‚Äçüíª </h1>\n      <table class=\"table table-bordered table-striped table-hover\">\n        <thead>\n          <tr>\n            <th class=\"text-center\">ID</th>\n            <th class=\"text-center\">First Name</th>\n            <th class=\"text-center\">Last Name</th>\n            <th class=\"text-center\">&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td>{{ user.firstName }}</td>\n            <td>{{ user.lastName }}</td>\n\n            <td>\n              <button type=\"button\" class=\"btn btn-info btn-sm mr-2\" (click)=\"showEditUserForm(user)\">Edit</button>\n\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeUser(user)\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <button class=\"btn btn-success\" (click)=\"showAddUserForm()\">Add New User</button>\n\n      <div class=\"mt-4\">\n        <form *ngIf=\"userForm\">\n          <h2>Add New User</h2>\n          <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"newUser.firstName\" /></p>\n          <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.lastName\" /></p>\n          <p>\n            <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\n          </p>\n        </form>\n\n        <form *ngIf=\"editUserForm\">\n          <h2>Edit User Details</h2>\n          <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"editedUser.firstName\" /></p>\n          <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"editedUser.lastName\" /></p>\n          <p>\n            <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser()\">Submit</button>\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits()\">Cancel</button>\n          </p>\n        </form>\n        <footer>Powered by <a href=\"https://ganeshmkavhar.000webhostapp.com/\">ganesh</a></footer>\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private upersons: User[] = [\n    {\n      id: 1,\n      firstName: 'Durgesh',\n      lastName: 'Pal'\n    },\n    {\n      id: 2,\n      firstName: 'Ankur',\n      lastName: 'Pal'\n    }\n  ];\n\n  constructor() { }\n\n  getUsersFromData(): User[] {\n    return this.upersons;\n  }\n\n  addUser(user: User) {\n    user.id = this.upersons.length + 1;\n    this.upersons.push(user);\n\n  }\n  updateUser(user: User) {\n    const index = this.upersons.findIndex(u => user.id === u.id);\n    this.upersons[index] = user;\n  }\n  deleteUser(user: User) {\n    this.upersons.splice(this.upersons.indexOf(user), 1);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}